#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:C:\IGAM\svn_kimsufi\sg1_working\system.xmp
#################################################################

XILINX_EDK_DIR = C:/Xilinx/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex2p

DEVICE = xc2vp30ff896-7

LANGUAGE = vhdl

SEARCHPATHOPT = 

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT)

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT)

VPGEN_OPTIONS = -p $(DEVICE) $(SEARCHPATHOPT)

LIBYGGDRASIL_OUTPUT_DIR = libyggdrasil
LIBYGGDRASIL_OUTPUT = $(LIBYGGDRASIL_OUTPUT_DIR)/executable.elf

BOOTLOADER_OUTPUT_DIR = bootloader
BOOTLOADER_OUTPUT = $(BOOTLOADER_OUTPUT_DIR)/executable.elf

TEST_SON_OUTPUT_DIR = test_son
TEST_SON_OUTPUT = $(TEST_SON_OUTPUT_DIR)/executable.elf

TEST_UART_OUTPUT_DIR = test_uart
TEST_UART_OUTPUT = $(TEST_UART_OUTPUT_DIR)/executable.elf

TEST_DMA_OUTPUT_DIR = test_dma
TEST_DMA_OUTPUT = $(TEST_DMA_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

PPC405_0_BOOTLOOP = $(BOOTLOOP_DIR)/ppc405_0.elf

PPC405_1_BOOTLOOP = $(BOOTLOOP_DIR)/ppc405_1.elf

BRAMINIT_ELF_FILES =  $(BOOTLOADER_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe ppc405_0 $(BOOTLOADER_OUTPUT) 

ALL_USER_ELF_FILES = $(LIBYGGDRASIL_OUTPUT) $(BOOTLOADER_OUTPUT) $(TEST_SON_OUTPUT) $(TEST_UART_OUTPUT) $(TEST_DMA_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM).do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM).do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM).do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT)  -s mti


LIBRARIES =  \
       ppc405_0/lib/libxil.a  \
       ppc405_1/lib/libxil.a 
VPEXEC = virtualplatform/vpexec.exe

LIBSCLEAN_TARGETS = ppc405_0_libsclean ppc405_1_libsclean 

PROGRAMCLEAN_TARGETS = libyggdrasil_programclean bootloader_programclean test_son_programclean test_uart_programclean test_dma_programclean 

CORE_STATE_DEVELOPMENT_FILES = C:\IGAM\svn_kimsufi\sg1_working\pcores\isuperdma_v1_00_a\hdl\vhdl\isuperdma.vhd \
C:\IGAM\svn_kimsufi\sg1_working\pcores\isprite_v1_00_a\hdl\vhdl\isprite.vhd \
C:\IGAM\svn_kimsufi\sg1_working\pcores\ivga_v2_00_a\hdl\vhdl\ivga.vhd

WRAPPER_NGC_FILES = implementation/ppc405_0_wrapper.ngc \
implementation/ppc405_1_wrapper.ngc \
implementation/jtagppc_0_wrapper.ngc \
implementation/reset_block_wrapper.ngc \
implementation/plb_wrapper.ngc \
implementation/opb_wrapper.ngc \
implementation/plb2opb_wrapper.ngc \
implementation/rs232_uart_1_wrapper.ngc \
implementation/sysace_compactflash_wrapper.ngc \
implementation/leds_4bit_wrapper.ngc \
implementation/dipsws_4bit_wrapper.ngc \
implementation/pushbuttons_5bit_wrapper.ngc \
implementation/ddr_256mb_32mx64_rank1_row13_col10_cl2_5_wrapper.ngc \
implementation/ps2_ports_wrapper.ngc \
implementation/audio_codec_wrapper.ngc \
implementation/plb_bram_if_cntlr_1_wrapper.ngc \
implementation/plb_bram_if_cntlr_1_bram_wrapper.ngc \
implementation/opb_intc_0_wrapper.ngc \
implementation/ps2_ports_io_adapter_wrapper.ngc \
implementation/sysclk_inv_wrapper.ngc \
implementation/clk90_inv_wrapper.ngc \
implementation/ddr_clk90_inv_wrapper.ngc \
implementation/dcm_0_wrapper.ngc \
implementation/dcm_1_wrapper.ngc \
implementation/isuperdma_0_wrapper.ngc \
implementation/isprite_0_wrapper.ngc \
implementation/ivga_0_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(BITGEN_UT_FILE) $(XFLOW_DEPENDENCY)

#################################################################
# SOFTWARE APPLICATION LIBYGGDRASIL
#################################################################

LIBYGGDRASIL_SOURCES = libyggdrasil/mm/malloc.c libyggdrasil/system/kernel/debug.c libyggdrasil/system/kernel/exceptions.c libyggdrasil/system/kernel/kernel.c libyggdrasil/system/kernel/queue.c libyggdrasil/system/kernel/sched.c libyggdrasil/system/kernel/task.c libyggdrasil/system/kernel/int/buttons.c libyggdrasil/system/kernel/int/intc.c libyggdrasil/system/kernel/int/pit.c libyggdrasil/system/kernel/int/ppctimer.c libyggdrasil/system/kernel/int/program.c libyggdrasil/system/kernel/syscalls/process.c libyggdrasil/system/kernel/syscalls/syscalls.c libyggdrasil/system/lib/debug_io/leds_io.c libyggdrasil/system/lib/ps2/keyboard.c libyggdrasil/system/lib/sound/sound.c libyggdrasil/system/lib/vga/bitmap.c libyggdrasil/system/lib/vga/console.c libyggdrasil/system/lib/vga/graphic.c libyggdrasil/system/lib/vga/sprites.c libyggdrasil/mods/xvectors.S libyggdrasil/system/kernel/asm/asm.S libyggdrasil/system/kernel/int/timer_handler.S libyggdrasil/system/kernel/syscalls/syscall_handler.S libyggdrasil/system/lib/libdrasil/libdrasil.S libyggdrasil/system/lib/vga/vga.S libyggdrasil/foliage/leaf_graphic/leaf_graphic.cpp libyggdrasil/foliage/start.cpp libyggdrasil/foliage/overload_new_delete.cpp libyggdrasil/foliage/foliage.cpp libyggdrasil/main.c libyggdrasil/pong.c 

LIBYGGDRASIL_HEADERS = libyggdrasil/game.h libyggdrasil/mm/malloc.c.h libyggdrasil/mods/xreg405.h libyggdrasil/system/init/main.h libyggdrasil/system/kernel/debug.h libyggdrasil/system/kernel/exceptions.h libyggdrasil/system/kernel/kernel.h libyggdrasil/system/kernel/queue.h libyggdrasil/system/kernel/sched.h libyggdrasil/system/kernel/sig.h libyggdrasil/system/kernel/task.h libyggdrasil/system/kernel/version.h libyggdrasil/system/kernel/asm/asm.h libyggdrasil/system/kernel/asm/ppc_machine.h libyggdrasil/system/kernel/int/buttons.h libyggdrasil/system/kernel/int/intc.h libyggdrasil/system/kernel/int/pit.h libyggdrasil/system/kernel/int/ppctimer.h libyggdrasil/system/kernel/int/program.h libyggdrasil/system/kernel/syscalls/syscall_fn.h libyggdrasil/system/kernel/syscalls/syscalls.h libyggdrasil/system/lib/debug_io/leds_io.h libyggdrasil/system/lib/ps2/keyboard.h libyggdrasil/system/lib/ps2/layouts/french.h libyggdrasil/system/lib/sound/sound.h libyggdrasil/system/lib/vga/bitmap.h libyggdrasil/system/lib/vga/console.h libyggdrasil/system/lib/vga/graphic.h libyggdrasil/system/lib/vga/math.h libyggdrasil/system/lib/vga/sprites.h libyggdrasil/foliage/leaf_graphic/leaf_graphic.h libyggdrasil/foliage/foliage.h libyggdrasil/foliage/basic_types.h libyggdrasil/foliage/settings.h libyggdrasil/main.h 

LIBYGGDRASIL_CC = powerpc-eabi-gcc
LIBYGGDRASIL_CC_SIZE = powerpc-eabi-size
LIBYGGDRASIL_CC_OPT = -O2
LIBYGGDRASIL_CFLAGS = 
LIBYGGDRASIL_CC_SEARCH = # -B
LIBYGGDRASIL_LIBPATH = -L./ppc405_0/lib/ # -L
LIBYGGDRASIL_INCLUDES = -I./ppc405_0/include/  -Ilibyggdrasil/ -Ilibyggdrasil/mm/ -Ilibyggdrasil/mods/ -Ilibyggdrasil/system/init/ -Ilibyggdrasil/system/kernel/ -Ilibyggdrasil/system/kernel/asm/ -Ilibyggdrasil/system/kernel/int/ -Ilibyggdrasil/system/kernel/syscalls/ -Ilibyggdrasil/system/lib/debug_io/ -Ilibyggdrasil/system/lib/ps2/ -Ilibyggdrasil/system/lib/ps2/layouts/ -Ilibyggdrasil/system/lib/sound/ -Ilibyggdrasil/system/lib/vga/ -Ilibyggdrasil/foliage/leaf_graphic/ -Ilibyggdrasil/foliage/   -IC:/IGAM/testing_system/libyggdrasil/system 
LIBYGGDRASIL_LFLAGS =   -lstdc++ 
LIBYGGDRASIL_CC_PREPROC_FLAG = # -Wp,
LIBYGGDRASIL_CC_ASM_FLAG = # -Wa,
LIBYGGDRASIL_CC_LINKER_FLAG = # -Wl,
LIBYGGDRASIL_LINKER_SCRIPT = libyggdrasil_linker_script.ld
LIBYGGDRASIL_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(LIBYGGDRASIL_LINKER_SCRIPT) 
LIBYGGDRASIL_CC_DEBUG_FLAG = # -[g|gstabs]
LIBYGGDRASIL_CC_PROFILE_FLAG = # -pg
LIBYGGDRASIL_CC_GLOBPTR_FLAG= # -msdata=eabi
LIBYGGDRASIL_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
LIBYGGDRASIL_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
LIBYGGDRASIL_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
LIBYGGDRASIL_OTHER_CC_FLAGS= $(LIBYGGDRASIL_CC_GLOBPTR_FLAG)  \
                  $(LIBYGGDRASIL_CC_START_ADDR_FLAG) $(LIBYGGDRASIL_CC_STACK_SIZE_FLAG) $(LIBYGGDRASIL_CC_HEAP_SIZE_FLAG)  \
                  $(LIBYGGDRASIL_CC_PREPROC_FLAG) $(LIBYGGDRASIL_CC_ASM_FLAG) $(LIBYGGDRASIL_CC_LINKER_FLAG)  \
                  $(LIBYGGDRASIL_LINKER_SCRIPT_FLAG) $(LIBYGGDRASIL_CC_DEBUG_FLAG) $(LIBYGGDRASIL_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION BOOTLOADER
#################################################################

BOOTLOADER_SOURCES = bootloader/src/bootloader.c bootloader/void.s 

BOOTLOADER_HEADERS = 

BOOTLOADER_CC = powerpc-eabi-gcc
BOOTLOADER_CC_SIZE = powerpc-eabi-size
BOOTLOADER_CC_OPT = -O2
BOOTLOADER_CFLAGS = 
BOOTLOADER_CC_SEARCH = # -B
BOOTLOADER_LIBPATH = -L./ppc405_0/lib/ # -L
BOOTLOADER_INCLUDES = -I./ppc405_0/include/ # -I
BOOTLOADER_LFLAGS = # -l
BOOTLOADER_CC_PREPROC_FLAG = # -Wp,
BOOTLOADER_CC_ASM_FLAG = # -Wa,
BOOTLOADER_CC_LINKER_FLAG = # -Wl,
BOOTLOADER_LINKER_SCRIPT = bootloader_linker_script.ld
BOOTLOADER_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(BOOTLOADER_LINKER_SCRIPT) 
BOOTLOADER_CC_DEBUG_FLAG =  -g 
BOOTLOADER_CC_PROFILE_FLAG = # -pg
BOOTLOADER_CC_GLOBPTR_FLAG= # -msdata=eabi
BOOTLOADER_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
BOOTLOADER_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
BOOTLOADER_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
BOOTLOADER_OTHER_CC_FLAGS= $(BOOTLOADER_CC_GLOBPTR_FLAG)  \
                  $(BOOTLOADER_CC_START_ADDR_FLAG) $(BOOTLOADER_CC_STACK_SIZE_FLAG) $(BOOTLOADER_CC_HEAP_SIZE_FLAG)  \
                  $(BOOTLOADER_CC_PREPROC_FLAG) $(BOOTLOADER_CC_ASM_FLAG) $(BOOTLOADER_CC_LINKER_FLAG)  \
                  $(BOOTLOADER_LINKER_SCRIPT_FLAG) $(BOOTLOADER_CC_DEBUG_FLAG) $(BOOTLOADER_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST_SON
#################################################################

TEST_SON_SOURCES = test_son/main.c test_son/sound.c test_son/asm.S 

TEST_SON_HEADERS = test_son/sound.h test_son/asm.h test_son/ppc_machine.h 

TEST_SON_CC = powerpc-eabi-gcc
TEST_SON_CC_SIZE = powerpc-eabi-size
TEST_SON_CC_OPT = -O2
TEST_SON_CFLAGS = 
TEST_SON_CC_SEARCH = # -B
TEST_SON_LIBPATH = -L./ppc405_0/lib/ # -L
TEST_SON_INCLUDES = -I./ppc405_0/include/  -Itest_son/ # -I
TEST_SON_LFLAGS = # -l
TEST_SON_CC_PREPROC_FLAG = # -Wp,
TEST_SON_CC_ASM_FLAG = # -Wa,
TEST_SON_CC_LINKER_FLAG = # -Wl,
TEST_SON_LINKER_SCRIPT = test_son_linker_script.ld
TEST_SON_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TEST_SON_LINKER_SCRIPT) 
TEST_SON_CC_DEBUG_FLAG =  -g 
TEST_SON_CC_PROFILE_FLAG = # -pg
TEST_SON_CC_GLOBPTR_FLAG= # -msdata=eabi
TEST_SON_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
TEST_SON_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST_SON_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST_SON_OTHER_CC_FLAGS= $(TEST_SON_CC_GLOBPTR_FLAG)  \
                  $(TEST_SON_CC_START_ADDR_FLAG) $(TEST_SON_CC_STACK_SIZE_FLAG) $(TEST_SON_CC_HEAP_SIZE_FLAG)  \
                  $(TEST_SON_CC_PREPROC_FLAG) $(TEST_SON_CC_ASM_FLAG) $(TEST_SON_CC_LINKER_FLAG)  \
                  $(TEST_SON_LINKER_SCRIPT_FLAG) $(TEST_SON_CC_DEBUG_FLAG) $(TEST_SON_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST_UART
#################################################################

TEST_UART_SOURCES = test_uart/main.c 

TEST_UART_HEADERS = 

TEST_UART_CC = powerpc-eabi-gcc
TEST_UART_CC_SIZE = powerpc-eabi-size
TEST_UART_CC_OPT = -O2
TEST_UART_CFLAGS = 
TEST_UART_CC_SEARCH = # -B
TEST_UART_LIBPATH = -L./ppc405_0/lib/ # -L
TEST_UART_INCLUDES = -I./ppc405_0/include/ # -I
TEST_UART_LFLAGS = # -l
TEST_UART_CC_PREPROC_FLAG = # -Wp,
TEST_UART_CC_ASM_FLAG = # -Wa,
TEST_UART_CC_LINKER_FLAG = # -Wl,
TEST_UART_LINKER_SCRIPT = test_uart_linker_script.ld
TEST_UART_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TEST_UART_LINKER_SCRIPT) 
TEST_UART_CC_DEBUG_FLAG =  -g 
TEST_UART_CC_PROFILE_FLAG = # -pg
TEST_UART_CC_GLOBPTR_FLAG= # -msdata=eabi
TEST_UART_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
TEST_UART_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST_UART_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST_UART_OTHER_CC_FLAGS= $(TEST_UART_CC_GLOBPTR_FLAG)  \
                  $(TEST_UART_CC_START_ADDR_FLAG) $(TEST_UART_CC_STACK_SIZE_FLAG) $(TEST_UART_CC_HEAP_SIZE_FLAG)  \
                  $(TEST_UART_CC_PREPROC_FLAG) $(TEST_UART_CC_ASM_FLAG) $(TEST_UART_CC_LINKER_FLAG)  \
                  $(TEST_UART_LINKER_SCRIPT_FLAG) $(TEST_UART_CC_DEBUG_FLAG) $(TEST_UART_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST_DMA
#################################################################

TEST_DMA_SOURCES = test_dma/main.c 

TEST_DMA_HEADERS = 

TEST_DMA_CC = powerpc-eabi-gcc
TEST_DMA_CC_SIZE = powerpc-eabi-size
TEST_DMA_CC_OPT = -O2
TEST_DMA_CFLAGS = 
TEST_DMA_CC_SEARCH = # -B
TEST_DMA_LIBPATH = -L./ppc405_0/lib/ # -L
TEST_DMA_INCLUDES = -I./ppc405_0/include/ # -I
TEST_DMA_LFLAGS = # -l
TEST_DMA_CC_PREPROC_FLAG = # -Wp,
TEST_DMA_CC_ASM_FLAG = # -Wa,
TEST_DMA_CC_LINKER_FLAG = # -Wl,
TEST_DMA_LINKER_SCRIPT = test_dma_linker_script.ld
TEST_DMA_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TEST_DMA_LINKER_SCRIPT) 
TEST_DMA_CC_DEBUG_FLAG =  -g 
TEST_DMA_CC_PROFILE_FLAG = # -pg
TEST_DMA_CC_GLOBPTR_FLAG= # -msdata=eabi
TEST_DMA_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
TEST_DMA_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST_DMA_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST_DMA_OTHER_CC_FLAGS= $(TEST_DMA_CC_GLOBPTR_FLAG)  \
                  $(TEST_DMA_CC_START_ADDR_FLAG) $(TEST_DMA_CC_STACK_SIZE_FLAG) $(TEST_DMA_CC_HEAP_SIZE_FLAG)  \
                  $(TEST_DMA_CC_PREPROC_FLAG) $(TEST_DMA_CC_ASM_FLAG) $(TEST_DMA_CC_LINKER_FLAG)  \
                  $(TEST_DMA_LINKER_SCRIPT_FLAG) $(TEST_DMA_CC_DEBUG_FLAG) $(TEST_DMA_CC_PROFILE_FLAG) 
